@startuml class_snippets.png
namespace snippets {
    namespace snippets.models {
        class .Board {
            name : django.db.models.DateField
            owner : django.db.models.ForeignKey<django.contrib.auth.models.User>
            read_public : django.db.models.BooleanField
            write_public : django.db.models.BooleanField
            read_users : django.db.models.ManyToManyField<django.contrib.auth.models.User>
            write_users : django.db.models.ManyToManyField<django.contrib.auth.models.User>
        }
        .Board --|> django.db.models.Model
            
        class .Snippet {
            creator : django.db.models.ForeignKey<django.contrib.auth.models.User>
            creation_time : django.db.models.DateField
            title : django.db.models.CharField
            description : django.db.models.TextField
            board : django.db.models.ForeignKey<Board>
            code : django.db.models.TextField
            tags : taggit.managers.TaggableManager
            favourited_users : django.db.models.ManyToManyField<django.contrib.auth.models.User>
            ratings : django.contrib.contenttypes.generics.GenericRelation<Rating>
            
            average_rating() : float
            distribution_ratings() : dict<float, float>
        }
        .Snippet --|> django.db.models.Model
    }

    class .views {
        {static} home_page(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} search(req : django.http.HttpRequest, query : str) : django.http.HttpResponse
        {static} login_form(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} login(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} privacy_policy(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} help(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} about_us(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} contact_form(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} contact(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} snippet_list(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} snippet_create_form(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} snippet_create(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} snippet_read(req : django.http.HttpRequest, snippet_id : int) : django.http.HttpResponse
        {static} snippet_update_form(req : django.http.HttpRequest, snippet_id : int) : django.http.HttpResponse
        {static} snippet_update(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} snippet_favourite(req : django.http.HttpRequest, snippet_id : int) : django.http.HttpResponse
        {static} board_create_form(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} board_create(req : django.http.HttpRequest) : django.http.HttpResponse
        {static} board_read(req : django.http.HttpRequest, board_id : int) : django.http.HttpResponse
        {static} board_update_form(req : django.http.HttpRequest, board_id : int) : django.http.HttpResponse
        {static} board_update(req : django.http.HttpRequest) : django.http.HttpResponse
    }
}
@enduml

@startuml class_ratings.png
namespace ratings {
    namespace ratings.models {
        class .Rating {
            content_type : django.db.models.ForeignKey<django.contrib.contenttypes.models.ContentType>
            object_id : django.db.models.PositiveIntegerField
            object : django.contrib.contenttypes.generics.GenericKey
            user : django.db.models.ForeignKey<django.contrib.auth.models.User>
            score : django.db.models.FloatField
        }
        .Rating --|> django.db.models.Model
    }
}
@enduml

@startuml class_profiles.png
namespace profiles {
    namespace profiles.models {
        class .Profile {
            user : django.db.models.ForeignKey<django.contrib.auth.models.User>
            icon : django.db.models.FileField
            bio  : django.db.models.TextField
        }
        .Profile --|> django.db.models.Model
    }
    
    class .views {
        {static} profile_create_form(req : django.http.HttpRequest, user_id : int) : django.http.HttpResponse
        {static} profile_create(req : django.http.HttpRequest, user_id : int) : django.http.HttpResponse
        {static} profile_read(req : django.http.HttpRequest, user_id : int) : django.http.HttpResponse
        {static} profile_update_form(req : django.http.HttpRequest, user_id : int) : django.http.HttpResponse
        {static} profile_update(req : django.http.HttpRequest, user_id : int) : django.http.HttpResponse
    }
}
@enduml